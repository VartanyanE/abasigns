{"version":3,"sources":["components/Menu/index.jsx","utils/ModeContext.jsx","components/Navbar/index.jsx","components/Card/index.jsx","pages/About.jsx","pages/Landing.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","dropdown","backgroundColor","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","createContext","navbar","ButtonAppBar","useContext","ModeContext","darkMode","setDarkMode","AppBar","position","Toolbar","Box","Typography","variant","Switch","size","checked","onChange","paper","padding","textAlign","palette","text","secondary","height","marginTop","card","button","display","justifyContent","About","Grid","container","item","xs","sm","Button","href","Paper","buttonCenter","success","light","buttonStyle","Landing","showButton","setShowButton","endIcon","App","createMuiTheme","type","primary","main","basename","Provider","value","ThemeProvider","style","Container","maxWidth","exact","path","component","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cfa256df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport ArrowDropDownCircleIcon from \"@material-ui/icons/ArrowDropDownCircle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  dropdown: {\r\n    backgroundColor: \"red\",\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"menu-appbar\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleMenu}\r\n          color=\"inherit\"\r\n        >\r\n          <ArrowDropDownCircleIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"menu-appbar\"\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          keepMounted\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n          <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext();","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuListComposition from \"../Menu\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport ModeContext from \"../../utils/ModeContext\"\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navbar: {\r\n    // backgroundColor: theme.palette.success.light\r\n\r\n  }\r\n}));\r\n\r\nconst handleClick = () => {\r\n  console.log(\"this was clicked\");\r\n};\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const [color, setColor] = useState();\r\n  const {darkMode, setDarkMode} = useContext(ModeContext)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.navbar} >\r\n        <Toolbar>\r\n          <Box>\r\n            <MenuListComposition />\r\n          </Box>\r\n\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            ABA Signs\r\n          </Typography>\r\n          <Switch  size=\"small\" checked={darkMode} onChange={()=> setDarkMode(!darkMode) } />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n});\r\n\r\nexport default function ImgMediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Sign Pic\"\r\n          height=\"100\"\r\n          image=\"\"\r\n          title=\"Sign Pic\"\r\n        />\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImgMediaCard from \"../components/Card\";\r\nimport {Button} from \"@material-ui/core\"\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  height: {\r\n    marginTop: \"10px\",\r\n    height: \"200px\",\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n             color: theme.palette.text.secondary,\r\n  },\r\n\r\n  card: {\r\n    height: \"100px\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \r\n   \r\n  }\r\n}));\r\n\r\nfunction About() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        {/* <Grid item xs={0} sm={2}></Grid> */}\r\n        <Grid item xs={2} sm={5}></Grid>\r\n        <Grid item xs={8} sm={2}>\r\n        <Box className={classes.button} ><Button variant=\"contained\" color=\"primary\" href=\"/\">\r\n        About\r\n      </Button></Box>\r\n        </Grid>\r\n        <Grid item xs={2} sm={5}></Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, {useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ImgMediaCard from \"../components/Card\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport About from \"../pages/About\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Box from '@material-ui/core/Box';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \r\n   \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  height: {\r\n    marginTop: \"10px\",\r\n    height: \"200px\",\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  card: {\r\n    height: \"100px\",\r\n  },\r\n\r\n  buttonCenter: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.success.light\r\n    },\r\n    \r\n  buttonStyle : {\r\n    // color: theme.palette.success.light\r\n  }\r\n}));\r\n\r\n\r\nfunction Landing() {\r\n  const classes = useStyles();\r\n  const [showButton, setShowButton]= useState(false);\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Router>\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={2} sm={5}></Grid>\r\n          <Grid item xs={8} sm={2}  >\r\n          <Box className={classes.buttonCenter} > <Button className={classes.buttonStyle} variant=\"contained\" color=\"primary\" href=\"/about\" >\r\n        Landing\r\n      </Button>\r\n      </Box>\r\n        </Grid>\r\n        <Grid item xs={2} sm={5}></Grid>\r\n        <Grid item xs={6} >\r\n       {showButton ? \"\" :  <Button variant=\"contained\" color=\"primary\" className={classes.buttonStyle}  >\r\n        Secondary \r\n  </Button> }\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n       <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => setShowButton(!showButton)}\r\n       \r\n        endIcon={<SaveIcon>send</SaveIcon>}\r\n      >\r\n        Save\r\n      </Button>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Card</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, HashRouter } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Landing from \"./pages/Landing\";\r\nimport About from \"./pages/About\"\r\nimport { ThemeProvider, Paper } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport ModeContext from \"./utils/ModeContext\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  \r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: darkMode ? \"dark\" : \"light\",\r\n    primary: {\r\n      \r\n      main: \"#bbdefb\",\r\n      text: \"#81c784\"\r\n    },\r\n    secondary: {\r\n      main: \"#f50057\",\r\n      text: \"#81c784\"\r\n    },\r\n    success: {\r\n      main: \"#bcbda4\",\r\n      \r\n    }\r\n  },\r\n \r\n});\r\n  \r\n  \r\n  return (\r\n    <Router basename=\"/\">\r\n      <ModeContext.Provider value={{darkMode, setDarkMode}}>\r\n      <ThemeProvider theme={theme}>\r\n      <Paper style={{height: \"100vh\"}}>\r\n      <div>\r\n        <Navbar />\r\n        <Container maxWidth=\"lg\">\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/about\" component={About} />\r\n        </Container> \r\n      </div>\r\n      </Paper>\r\n    </ThemeProvider>\r\n    </ModeContext.Provider>\r\n     </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n      <App />\r\n      \r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}