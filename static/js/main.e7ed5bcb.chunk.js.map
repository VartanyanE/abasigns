{"version":3,"sources":["pages/Services.jsx","pages/Contact.jsx","components/Card/index.jsx","utils/ImageCardContext.jsx","pages/Landing/index.js","utils/ModeContext.jsx","components/Drawer/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Services","style","marginTop","Contact","useStyles","makeStyles","root","media","height","center","display","justifyContent","MediaCard","props","classes","Card","className","CardActionArea","CardMedia","image","title","createContext","theme","flexGrow","card","maxWidth","paper","padding","spacing","textAlign","color","palette","text","secondary","buttonCenter","alignItems","buttonStyle","success","light","Landing","imageCard","useContext","ImageCardContext","Grid","container","item","xs","sm","id","map","imageMap","name","key","description","imageLogo","width","imageBox","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","HomeIcon","SvgIcon","d","withRouter","useTheme","history","React","useState","open","setOpen","darkMode","ModeContext","itemsList","icon","onClick","push","CssBaseline","AppBar","position","clsx","Toolbar","disableGutters","Box","alt","src","IconButton","aria-label","edge","Drawer","variant","anchor","direction","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","primary","App","setDarkMode","setImageCard","useEffect","imagecard","createMuiTheme","typography","fontFamily","type","main","basename","process","Provider","value","ThemeProvider","Paper","Container","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7ed5bcb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Services = () => {\r\n\r\n\r\n    return (\r\n        <h1 style={{marginTop: \"100px\"}}>Services</h1>\r\n    )\r\n}\r\n\r\nexport default Services;","import React from 'react'\r\n\r\n\r\nconst Contact = () => {\r\n\r\n\r\n    return (\r\n        <h1 style={{marginTop: \"100px\"}}>Contact</h1>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxWidth: 345,\r\n    marginTop: 20,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        {/* <CardContent>\r\n          <Typography\r\n            className={classes.center}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent> */}\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext();","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import ImgMediaCard from \"../components/Card\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n// import About from \"../pages/About\";\r\n// import Icon from \"@material-ui/core/Icon\";\r\n// import SaveIcon from \"@material-ui/icons/Save\";\r\n// import Box from \"@material-ui/core/Box\";\r\nimport CardComp from \"../../components/Card\";\r\nimport ImageCardContext from \"../../utils/ImageCardContext\";\r\nimport \"./style.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  \r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 240,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  height: {\r\n    marginTop: \"50px\",\r\n   \r\n  },\r\n\r\n  buttonCenter: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    height: \"200px\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  buttonStyle: {\r\n    color: theme.palette.success.light,\r\n  },\r\n}));\r\n\r\nfunction Landing() {\r\n  const classes = useStyles();\r\n  const { imageCard } = useContext(ImageCardContext);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={0} sm={2}></Grid>\r\n          <Grid item xs={12} sm={8} className={classes.height}>\r\n            <div id=\"content\">\r\n            {imageCard.map((imageMap) => (\r\n              <CardComp\r\n                image={imageMap.image}\r\n                title={imageMap.name}\r\n                key={imageMap.id}\r\n                description={imageMap.description}\r\n              />\r\n            ))}\r\n            </div>\r\n           \r\n          </Grid>\r\n          <Grid item xs={0} sm={2}></Grid>\r\n        </Grid>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext();","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\n// import BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\r\nimport ModeContext from \"../../utils/ModeContext\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { Box} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PanoramaIcon from '@material-ui/icons/Panorama';\r\n\r\nconst drawerWidth = 160;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n   \r\n    \r\n  },\r\n\r\n  imageLogo : {\r\n    display: \"flex\",\r\n    height: \"50px\",\r\n    width: \"160px\",\r\n    justifyContent: \"flex-start\"\r\n  },\r\n\r\n  imageBox : {\r\n    flexGrow: 1\r\n\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n      <SvgIcon {...props}>\r\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\nconst PersistentDrawerRight=(props)=> {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { history } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const { darkMode } = useContext(ModeContext);\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: darkMode ? <HomeIcon /> : <HomeIcon color=\"primary\" />,\r\n      onClick: () => {\r\n        history.push(\"/\");\r\n        setOpen(false)\r\n    }},\r\n    {\r\n      text: \"Services\",\r\n      icon: darkMode ? <PanoramaIcon /> : <PanoramaIcon color=\"primary\" />,\r\n      onClick: () => {\r\n        history.push(\"/services\");\r\n        setOpen(false)\r\n     } },\r\n    {\r\n      text: \"Contact\",\r\n      icon:  darkMode ? <MailIcon /> : <MailIcon color=\"primary\" />,\r\n      onClick: () =>{ \r\n        history.push(\"/contact\");\r\n        setOpen(false);\r\n\r\n      }\r\n    }\r\n  ];\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar color=\"Secondary\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar disableGutters={true}>\r\n        \r\n          {/* <Typography style={{ flexGrow: 1 }} variant=\"h5\">\r\n            ABA SIGNS\r\n          </Typography> */}\r\n          <Box className={classes.imageBox} >\r\n            <img className={classes.imageLogo} alt= \"\" src={\"https://storage.googleapis.com/wzukusers/user-32345829/images/5aac6a01bde5cYIMijbH/Business-card-backfinal-copy.gif\"} />\r\n\r\n\r\n          </Box>\r\n          {/* <IconButton\r\n            className={classes.navbar}\r\n            onClick={() => setDarkMode(!darkMode)}\r\n          >\r\n            <BrightnessHighIcon />\r\n          </IconButton> */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(open && classes.hide)}\r\n            style={{marginRight: \"10px\"}}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n     \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n        {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <ListItem button key={text} onClick={onClick} style={{color: \"primary\"}}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        </List>\r\n        <Divider />\r\n        {/* <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PersistentDrawerRight)\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Services from \"./pages/Services\"\r\nimport Contact from \"./pages/Contact\"\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Landing from \"./pages/Landing\";\r\n// import About from \"./pages/About\";\r\nimport { ThemeProvider, Paper, CssBaseline } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport ModeContext from \"./utils/ModeContext\";\r\nimport ImageCardContext from \"./utils/ImageCardContext\"\r\n// import Yellowtail from \"./fonts/Yellowtail.ttf\";\r\nimport imagecard from \"./imagecard.json\"\r\nimport PersistentDrawerRight from \"./components/Drawer\";\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [imageCard, setImageCard] = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n      setImageCard(imagecard);\r\n  },[]);\r\n\r\n  \r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: \"MuseoModerno, Yellowtail, Arial\",\r\n    },\r\n  \r\n    palette: {\r\n      type: \"dark\",\r\n      primary: {\r\n        main: \"#f44336\",\r\n        text: \"#81c784\",\r\n      },\r\n      secondary: {\r\n        main: \"#1b1b1b\",\r\n        text: \"#81c784\",\r\n      },\r\n      success: {\r\n        main: \"#bcbda4\",\r\n      },\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      {/* <Switch> */}\r\n      <ModeContext.Provider value={{ darkMode, setDarkMode }}>\r\n        <ImageCardContext.Provider value ={{imageCard, setImageCard}}>\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <Paper>\r\n            <div>\r\n             \r\n              <PersistentDrawerRight />\r\n              <Container maxWidth=\"lg\">\r\n                <Route exact path=\"/\" component={Landing} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n                <Route path=\"/services\" component={Services} />\r\n              </Container>\r\n            </div>\r\n          </Paper>\r\n        </ThemeProvider>\r\n        </ImageCardContext.Provider>\r\n      </ModeContext.Provider>\r\n      {/* </Switch> */}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}