{"version":3,"sources":["components/Menu/index.jsx","utils/ModeContext.jsx","components/Navbar/index.jsx","components/Card/index.jsx","pages/About.jsx","pages/Landing.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","dropdown","backgroundColor","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","createContext","navbar","ButtonAppBar","useContext","ModeContext","darkMode","setDarkMode","AppBar","position","Toolbar","Box","Typography","variant","Switch","size","checked","onChange","paper","padding","textAlign","palette","text","secondary","height","marginTop","card","button","display","justifyContent","About","Grid","container","item","xs","sm","Button","href","Paper","buttonCenter","success","light","buttonStyle","Landing","showButton","setShowButton","endIcon","App","createMuiTheme","type","primary","main","Provider","value","ThemeProvider","style","Container","maxWidth","exact","path","process","component","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.387f0083.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ArrowDropDownCircleIcon from \"@material-ui/icons/ArrowDropDownCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  dropdown: {\n    backgroundColor: \"red\",\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"menu-appbar\"\n          aria-haspopup=\"true\"\n          onClick={handleMenu}\n          color=\"inherit\"\n        >\n          <ArrowDropDownCircleIcon />\n        </IconButton>\n        <Menu\n          id=\"menu-appbar\"\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          keepMounted\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\n          <MenuItem onClick={handleClose}>My account</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n}\n","import { createContext } from \"react\";\n\nexport default createContext();","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuListComposition from \"../Menu\";\nimport { Box } from \"@material-ui/core\";\nimport ModeContext from \"../../utils/ModeContext\"\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navbar: {\n    // backgroundColor: theme.palette.success.light\n\n  }\n}));\n\nconst handleClick = () => {\n  console.log(\"this was clicked\");\n};\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const [color, setColor] = useState();\n  const {darkMode, setDarkMode} = useContext(ModeContext)\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.navbar} >\n        <Toolbar>\n          <Box>\n            <MenuListComposition />\n          </Box>\n\n          <Typography variant=\"h5\" className={classes.title}>\n            ABA Signs\n          </Typography>\n          <Switch  size=\"small\" checked={darkMode} onChange={()=> setDarkMode(!darkMode) } />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Sign Pic\"\n          height=\"100\"\n          image=\"\"\n          title=\"Sign Pic\"\n        />\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ImgMediaCard from \"../components/Card\";\nimport {Button} from \"@material-ui/core\"\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  height: {\n    marginTop: \"10px\",\n    height: \"200px\",\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n             color: theme.palette.text.secondary,\n  },\n\n  card: {\n    height: \"100px\",\n  },\n  button: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    \n   \n  }\n}));\n\nfunction About() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {/* <Grid item xs={0} sm={2}></Grid> */}\n        <Grid item xs={2} sm={5}></Grid>\n        <Grid item xs={8} sm={2}>\n        <Box className={classes.button} ><Button variant=\"contained\" color=\"primary\" href=\"/\">\n        About\n      </Button></Box>\n        </Grid>\n        <Grid item xs={2} sm={5}></Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default About;\n","import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ImgMediaCard from \"../components/Card\";\nimport Button from '@material-ui/core/Button';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"../pages/About\"\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    \n   \n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  height: {\n    marginTop: \"10px\",\n    height: \"200px\",\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  card: {\n    height: \"100px\",\n  },\n\n  buttonCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.success.light\n    },\n    \n  buttonStyle : {\n    // color: theme.palette.success.light\n  }\n}));\n\n\nfunction Landing() {\n  const classes = useStyles();\n  const [showButton, setShowButton]= useState(false);\n\n  \n\n\n  return (\n    <Router>\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={2} sm={5}></Grid>\n          <Grid item xs={8} sm={2}  >\n          <Box className={classes.buttonCenter} > <Button className={classes.buttonStyle} variant=\"contained\" color=\"primary\" href=\"/about\" >\n        Landing\n      </Button>\n      </Box>\n        </Grid>\n        <Grid item xs={2} sm={5}></Grid>\n        <Grid item xs={6} >\n       {showButton ? \"\" :  <Button variant=\"contained\" color=\"primary\" className={classes.buttonStyle}  >\n        Secondary \n  </Button> }\n        </Grid>\n        <Grid item xs={6}>\n       <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setShowButton(!showButton)}\n       \n        endIcon={<SaveIcon>send</SaveIcon>}\n      >\n        Save\n      </Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n      </Grid>\n    </div>\n    </Router>\n  );\n}\n\nexport default Landing;\n","import React, { useState, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Landing from \"./pages/Landing\";\nimport About from \"./pages/About\";\nimport { ThemeProvider, Paper } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport ModeContext from \"./utils/ModeContext\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      primary: {\n        main: \"#bbdefb\",\n        text: \"#81c784\",\n      },\n      secondary: {\n        main: \"#f50057\",\n        text: \"#81c784\",\n      },\n      success: {\n        main: \"#bcbda4\",\n      },\n    },\n  });\n\n  return (\n    <Router>\n      <ModeContext.Provider value={{ darkMode, setDarkMode }}>\n        <ThemeProvider theme={theme}>\n          <Paper style={{ height: \"100vh\" }}>\n            <div>\n              <Navbar />\n              <Container maxWidth=\"lg\">\n                <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/\"}\n                  component={Landing}\n                />\n                <Route exact path=\"/about\" component={About} />\n              </Container>\n            </div>\n          </Paper>\n        </ThemeProvider>\n      </ModeContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n      \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}