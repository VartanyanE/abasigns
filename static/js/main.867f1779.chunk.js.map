{"version":3,"sources":["fonts/Yellowtail.ttf","components/Menu/index.jsx","utils/ModeContext.jsx","components/Navbar/index.jsx","components/Card/index.jsx","utils/ImageCardContext.jsx","pages/Landing.jsx","pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","dropdown","backgroundColor","createContext","useStyles","toolbar","palette","primary","display","fontFamily","navbar","justifyContent","HomeIcon","props","SvgIcon","d","ButtonAppBar","classes","useContext","ModeContext","darkMode","setDarkMode","className","AppBar","position","Toolbar","Box","to","IconButton","href","size","color","Typography","style","variant","onClick","marginTop","media","height","center","MediaCard","Card","CardActionArea","CardMedia","image","card","maxWidth","paper","padding","textAlign","text","secondary","buttonCenter","alignItems","buttonStyle","success","light","Landing","ImageCardContext","imageCard","setImageCard","Grid","container","item","xs","sm","map","imageMap","name","key","id","description","button","About","Button","App","useState","useEffect","imagecard","createMuiTheme","typography","type","main","basename","process","Provider","value","ThemeProvider","CssBaseline","Paper","Container","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"02CAAAA,EAAOC,QAAU,IAA0B,wC,mLCezBC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAGZK,SAAU,CACRC,gBAAiB,W,aCzBNC,4B,yBCcTC,EAAYX,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAG7BM,QAAS,CACPH,gBAAiBR,EAAMY,QAAQC,QAC/BC,QAAS,OACTC,WAAY,cAEdC,OAAQ,CACNF,QAAS,OACTG,eAAgB,gBAOpB,SAASC,EAASC,GAChB,OACE,kBAACC,EAAA,EAAYD,EACX,0BAAME,EAAE,yCAKC,SAASC,IACtB,IAAMC,EAAUb,IADqB,EAGHc,qBAAWC,GAArCC,EAH6B,EAG7BA,SAAUC,EAHmB,EAGnBA,YAElB,OACE,yBAAKC,UAAWL,EAAQtB,MACtB,kBAAC4B,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASH,UAAWL,EAAQZ,SAC1B,kBAACqB,EAAA,EAAD,KAEE,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACC,EAAA,EAAD,CAAYC,KAAK,IAAIC,KAAK,SACxB,kBAAClB,EAAD,CAAUmB,MAAM,gBAItB,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAAErC,SAAU,GAAKsC,QAAQ,MAA5C,aAIA,kBAACN,EAAA,EAAD,CACEN,UAAWL,EAAQP,OACnByB,QAAS,kBAAMd,GAAaD,KAE5B,kBAAC,IAAD,U,iDC7DNhB,EAAYX,YAAW,CAC3BE,KAAM,CAEJyC,UAAW,IAEbC,MAAO,CACLC,OAAQ,KAEVC,OAAQ,CACN/B,QAAS,OACTG,eAAgB,YAIL,SAAS6B,EAAU3B,GAChC,IAAMI,EAAUb,IAEhB,OACE,kBAACqC,EAAA,EAAD,CAAMnB,UAAWL,EAAQtB,MACvB,kBAAC+C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErB,UAAWL,EAAQoB,MACnBO,MAAO/B,EAAM+B,MACb5C,MAAM,4BC/BDG,gCCYTC,EAAYX,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZiD,KAAM,CACJC,SAAU,KAEZT,MAAO,CACLC,OAAQ,KAEVS,MAAO,CACLC,QAAStD,EAAMK,QAAQ,GACvBkD,UAAW,SACXlB,MAAOrC,EAAMY,QAAQ4C,KAAKC,WAG5Bb,OAAQ,CACNF,UAAW,OACXE,OAAQ,QACRU,QAAStD,EAAMK,QAAQ,GACvBkD,UAAW,SACXlB,MAAOrC,EAAMY,QAAQ4C,KAAKC,WAG5BC,aAAc,CACZ5C,QAAS,OACTG,eAAgB,SAChB2B,OAAQ,QACRe,WAAY,UAGdC,YAAa,CACXvB,MAAOrC,EAAMY,QAAQiD,QAAQC,WA8BlBC,MA1Bf,WACE,IAAMxC,EAAUb,IADC,EAEmBc,qBAAWwC,GAAvCC,EAFS,EAETA,UAER,OAJiB,EAEEC,aAGjB,kBAAC,IAAD,KACE,yBAAKtC,UAAWL,EAAQtB,MACtB,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAAC/D,QAAS,GACvB,kBAAC8D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACtB,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACpBN,EAAUO,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CACEvB,MAAOuB,EAASvB,MAChB5C,MAAOmE,EAASC,KAChBC,IAAKF,EAASG,GACdC,YAAaJ,EAASI,kBAI5B,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,Q,SC7D1B7D,EAAYX,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZmD,MAAO,CACLC,QAAStD,EAAMK,QAAQ,GACvBkD,UAAW,SACXlB,MAAOrC,EAAMY,QAAQ4C,KAAKC,WAG5Bb,OAAQ,CACNF,UAAW,OACXE,OAAQ,QACRU,QAAStD,EAAMK,QAAQ,GACvBkD,UAAW,SACXlB,MAAOrC,EAAMY,QAAQ4C,KAAKC,WAG5BN,KAAM,CACJP,OAAQ,SAEVkC,OAAQ,CACNhE,QAAS,OACTG,eAAgB,cA2CL8D,MAvCf,WACE,IAAMxD,EAAUb,IAEhB,OACE,yBAAKkB,UAAWL,EAAQtB,MACtB,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAAC/D,QAAS,GAEvB,kBAAC8D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACtB,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACvC,EAAA,EAAD,CAAKJ,UAAWL,EAAQuD,QACtB,kBAACE,EAAA,EAAD,CAAQxC,QAAQ,YAAYH,MAAM,UAAUF,KAAK,KAAjD,c,kDCyBG8C,MAxDf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNxD,EADM,KACIC,EADJ,OAEqBuD,mBAAS,IAF9B,mBAENjB,EAFM,KAEKC,EAFL,KAKbiB,qBAAU,WACNjB,EAAakB,MAIjB,IAAMpF,EAAQqF,YAAe,CAC3BC,WAAY,CACVvE,WAAY,mCAGdH,QAAS,CACP2E,KAAM7D,EAAW,OAAS,QAC1Bb,QAAS,CACP2E,KAAM,UACNhC,KAAM,WAERC,UAAW,CACT+B,KAAM,UACNhC,KAAM,WAERK,QAAS,CACP2B,KAAM,cAKZ,OACE,kBAAC,IAAD,CAAQC,SAAUC,aAEhB,kBAACjE,EAAYkE,SAAb,CAAsBC,MAAO,CAAElE,WAAUC,gBACvC,kBAACqC,EAAiB2B,SAAlB,CAA2BC,MAAQ,CAAC3B,YAAWC,iBAE/C,kBAAC2B,EAAA,EAAD,CAAe7F,MAAOA,GACpB,kBAAC8F,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAW5C,SAAS,MAClB,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,IAAIC,UAAWpC,IACjC,kBAAC,IAAD,CAAOmC,KAAK,SAASC,UAAWpB,YC9C5BqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.867f1779.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Yellowtail.c59dc89f.ttf\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import AccountCircle from \"@material-ui/icons/AccountCircle\";\n// import Switch from \"@material-ui/core/Switch\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import FormGroup from \"@material-ui/core/FormGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ArrowDropDownCircleIcon from \"@material-ui/icons/ArrowDropDownCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  dropdown: {\n    backgroundColor: \"red\",\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"menu-appbar\"\n          aria-haspopup=\"true\"\n          onClick={handleMenu}\n          color=\"inherit\"\n        >\n          <ArrowDropDownCircleIcon />\n        </IconButton>\n        <Menu\n          id=\"menu-appbar\"\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          keepMounted\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\",\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\n          <MenuItem onClick={handleClose}>My account</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n}\n","import { createContext } from \"react\";\n\nexport default createContext();","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Button from \"@material-ui/core/Button\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuListComposition from \"../Menu\";\nimport { Box, Button, IconButton } from \"@material-ui/core\";\nimport ModeContext from \"../../utils/ModeContext\";\nimport Switch from \"@material-ui/core/Switch\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { Link } from \"react-router-dom\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  toolbar: {\n    backgroundColor: theme.palette.primary,\n    display: \"flex\",\n    fontFamily: \"Yellowtail\",\n  },\n  navbar: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\n// const handleClick = () => {\n//   console.log(\"this was clicked\");\n// };\nfunction HomeIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  // const [color, setColor] = useState();\n  const { darkMode, setDarkMode } = useContext(ModeContext);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Box>\n            {/* <MenuListComposition /> */}\n            <Link to=\"/\">\n              <IconButton href=\"/\" size=\"small\">\n                <HomeIcon color=\"disabled\" />\n              </IconButton>\n            </Link>\n          </Box>\n          <Typography style={{ flexGrow: 1 }} variant=\"h5\">\n            ABA SIGNS\n          </Typography>\n\n          <IconButton\n            className={classes.navbar}\n            onClick={() => setDarkMode(!darkMode)}\n          >\n            <BrightnessHighIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 345,\n    marginTop: 20,\n  },\n  media: {\n    height: 140,\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title=\"Contemplative Reptile\"\n        />\n        {/* <CardContent>\n          <Typography\n            className={classes.center}\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {props.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n        </CardContent> */}\n      </CardActionArea>\n    </Card>\n  );\n}\n","import { createContext } from \"react\";\n\nexport default createContext();","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n// import ImgMediaCard from \"../components/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import About from \"../pages/About\";\n// import Icon from \"@material-ui/core/Icon\";\n// import SaveIcon from \"@material-ui/icons/Save\";\nimport Box from \"@material-ui/core/Box\";\nimport CardComp from \"../components/Card\";\nimport ImageCardContext from \"../utils/ImageCardContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  height: {\n    marginTop: \"10px\",\n    height: \"200px\",\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  buttonCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"200px\",\n    alignItems: \"center\",\n  },\n\n  buttonStyle: {\n    color: theme.palette.success.light,\n  },\n}));\n\nfunction Landing() {\n  const classes = useStyles();\n  const { imageCard, setImageCard } = useContext(ImageCardContext);\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={0} sm={4}></Grid>\n          <Grid item xs={12} sm={4}>\n            {imageCard.map((imageMap) => (\n              <CardComp\n                image={imageMap.image}\n                title={imageMap.name}\n                key={imageMap.id}\n                description={imageMap.description}\n              />\n            ))}\n          </Grid>\n          <Grid item xs={0} sm={4}></Grid>\n        </Grid>\n      </div>\n    </Router>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n// import ImgMediaCard from \"../components/Card\";\nimport { Button } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  height: {\n    marginTop: \"10px\",\n    height: \"200px\",\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  card: {\n    height: \"100px\",\n  },\n  button: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction About() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {/* <Grid item xs={0} sm={2}></Grid> */}\n        <Grid item xs={2} sm={5}></Grid>\n        <Grid item xs={8} sm={2}>\n          <Box className={classes.button}>\n            <Button variant=\"contained\" color=\"primary\" href=\"/\">\n              About\n            </Button>\n          </Box>\n        </Grid>\n        {/* <Grid item xs={2} sm={5}></Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>Card</Paper>\n        </Grid> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Landing from \"./pages/Landing\";\nimport About from \"./pages/About\";\nimport { ThemeProvider, Paper, CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport ModeContext from \"./utils/ModeContext\";\nimport ImageCardContext from \"./utils/ImageCardContext\"\nimport Yellowtail from \"./fonts/Yellowtail.ttf\";\nimport imagecard from \"./imagecard.json\"\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [imageCard, setImageCard] = useState([]);\n\n  \n  useEffect(() => {\n      setImageCard(imagecard);\n  });\n\n  \n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: \"MuseoModerno, Yellowtail, Arial\",\n    },\n  \n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      primary: {\n        main: \"#1a237e\",\n        text: \"#81c784\",\n      },\n      secondary: {\n        main: \"#f50057\",\n        text: \"#81c784\",\n      },\n      success: {\n        main: \"#bcbda4\",\n      },\n    },\n  });\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      {/* <Switch> */}\n      <ModeContext.Provider value={{ darkMode, setDarkMode }}>\n        <ImageCardContext.Provider value ={{imageCard, setImageCard}}>\n\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Paper>\n            <div>\n              <Navbar />\n              <Container maxWidth=\"lg\">\n                <Route exact path=\"/\" component={Landing} />\n                <Route path=\"/about\" component={About} />\n              </Container>\n            </div>\n          </Paper>\n        </ThemeProvider>\n        </ImageCardContext.Provider>\n      </ModeContext.Provider>\n      {/* </Switch> */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}